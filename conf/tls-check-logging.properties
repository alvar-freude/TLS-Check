############################################################
#
# Logging-Konfiguration
# loggt  in drei verschiedene Dateien:
#
#    * Normales log (ab INFO)
#    * Error Log (ab ERROR)
#    * komplettes Log (am TRACE)
#
# Außerdem in reduzierten Form auf den Screen (STDOUT)
#
#
############################################################


# Layouts / Formatierung: Standard und reduziert für Screen

layout_class   = Log::Log4perl::Layout::PatternLayout

# %09r => 9-stellig, die vergangenen Millisekunden seit Start
#layout_pattern = %d{yyyy-MM-dd HH:mm:ss} %M (%04L): %-5p: %m %n
layout_pattern  = %d{ISO8601} %M (%04L): %P %-5p: %m %n
screen_pattern  = %-5p: %m %n


# Haupt-Logger, der ab TRACE zuschlägt ...
log4perl.logger=TRACE, LOGFILE, SCREEN, tracelog, errorlog


#
# Notiz:
# Ein Syslog-Appender sollte einfach gehen:
# Log::Dispatch::Syslog; weitere Parameter: ident => tlscheck.pl
# http://search.cpan.org/dist/Log-Dispatch/lib/Log/Dispatch/Syslog.pm
#


#
# Log::Dispatch::FileRotate
#

# Standard-Logfile: loggt alles ab INFO

### TODO: Baue mal ein Log::Log4perl::Appender::File::RotateAtStart

#log4perl.appender.LOGFILE = Log::Dispatch::FileRotate
log4perl.appender.LOGFILE = Log::Log4perl::Appender::File
log4perl.appender.LOGFILE.filename = sub { return "$Security::TLSCheck::App::LOG_DIR/info.log" };
#log4perl.appender.LOGFILE.mode = append
log4perl.appender.LOGFILE.mode = clobber
log4perl.appender.LOGFILE.layout = ${layout_class}
log4perl.appender.LOGFILE.layout.ConversionPattern = ${layout_pattern}
log4perl.appender.LOGFILE.min_level = info
log4perl.appender.LOGFILE.Threshold = INFO
log4perl.appender.LOGFILE.syswrite = 1
#log4perl.appender.LOGFILE.size = 10485760
#log4perl.appender.LOGFILE.max = 5

#
# Hier geht alles ab TRACE rein!
#

#log4perl.appender.tracelog = Log::Dispatch::FileRotate
log4perl.appender.tracelog = Log::Log4perl::Appender::File
log4perl.appender.tracelog.filename = sub { return "$Security::TLSCheck::App::LOG_DIR/trace.log" };
#log4perl.appender.tracelog.mode = append
log4perl.appender.tracelog.mode = clobber
log4perl.appender.tracelog.layout = ${layout_class}
log4perl.appender.tracelog.layout.ConversionPattern = ${layout_pattern}
log4perl.appender.tracelog.syswrite = 1
#log4perl.appender.tracelog.size = 10485760
#log4perl.appender.tracelog.max = 5


#
# Und hier nur ab ERROR!
#

#log4perl.appender.errorlog = Log::Dispatch::FileRotate
log4perl.appender.errorlog = Log::Log4perl::Appender::File
log4perl.appender.errorlog.filename = sub { return "$Security::TLSCheck::App::LOG_DIR/error.log" };
#log4perl.appender.errorlog.mode = append
log4perl.appender.errorlog.mode = clobber
log4perl.appender.errorlog.layout = ${layout_class}
log4perl.appender.errorlog.layout.ConversionPattern = ${layout_pattern}
log4perl.appender.errorlog.min_level = warning
log4perl.appender.errorlog.Threshold = WARN
log4perl.appender.errorlog.syswrite = 1
#log4perl.appender.errorlog.size = 10485760
#log4perl.appender.errorlog.max = 5


#
# Bildschirmausgaben nach STDERR ab INFO, und reduziertes Layout
#

log4perl.appender.SCREEN  = Log::Log4perl::Appender::Screen
log4perl.appender.SCREEN.layout = ${layout_class}
log4perl.appender.SCREEN.layout.ConversionPattern = ${screen_pattern}
log4perl.appender.SCREEN.Threshold = INFO
log4perl.appender.SCREEN.stderr = 1
log4perl.appender.SCREEN.utf8 = 1




